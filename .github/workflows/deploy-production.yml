name: Deploy Production

on:
  push:
    branches: ['back-end']
  pull_request:
    branches: ['back-end']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        run: docker build --platform linux/amd64 -t caophi562005/pixcam-server:v1 .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push docker image to DockerHub
        run: docker push caophi562005/pixcam-server:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          password: ${{ secrets.PASSWORD_PRODUCTION }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            set -e  # Dừng lại ngay khi có lỗi

            echo "🚀 Bắt đầu quá trình triển khai..."

            # Tạo thư mục dự án nếu chưa tồn tại
            PROJECT_DIR="$HOME/pixcam-server"
            mkdir -p $PROJECT_DIR
            cd $PROJECT_DIR

            # Đăng nhập vào DockerHub trên server
            echo "📥 Đăng nhập DockerHub..."
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Kéo image mới nhất
            echo "📦 Kéo image Docker mới nhất..."
            docker pull caophi562005/pixcam-server:v1

            # Dọn dẹp các image cũ không dùng đến
            echo "🧹 Dọn dẹp image cũ..."
            docker image prune -f

            echo "🔄 Dừng container cũ..."
            docker stop pixcam-server 2>/dev/null || echo "No container to stop"
            docker rm pixcam-server 2>/dev/null || echo "No container to remove"

            # Tạo tệp .env mới từ GitHub Secrets
            echo "⚙️ Tạo tệp .env..."
            cat <<EOF > .env
            ${{ secrets.ENV_PRODUCTION }}
            EOF
            echo "✅ Đã tạo tệp .env thành công."

            # Tạo tệp docker-compose.yml
            echo "⚙️ Tạo tệp docker-compose.yml..."
            cat <<'EOF' > docker-compose.yml
            version: '3.8'
            services:
              pixcam-server:
                image: caophi562005/pixcam-server:v1
                container_name: pixcam-server
                restart: unless-stopped
                ports:
                  - "3000:3000"
                env_file:
                  - .env
            EOF
            echo "✅ Đã tạo tệp docker-compose.yml thành công."

            # Dừng và khởi động lại dịch vụ bằng Docker Compose
            # Lệnh 'up -d' sẽ tự động dừng và tạo lại container nếu cấu hình hoặc image thay đổi
            echo "🚀 Khởi động container bằng Docker Compose..."
            docker-compose up -d

            echo "🎉 Quá trình triển khai hoàn tất thành công!"
