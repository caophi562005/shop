name: Deploy Production (Frontend)

on:
  push:
    branches: ["client"] # ƒë·ªïi theo nh√°nh FE c·ªßa b·∫°n
  pull_request:
    branches: ["client"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        run: docker build --platform linux/amd64 -t caophi562005/pixcam-client:v1 .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push docker image to DockerHub
        run: docker push caophi562005/pixcam-client:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          password: ${{ secrets.PASSWORD_PRODUCTION }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            set -e

            echo "üöÄ B·∫Øt ƒë·∫ßu tri·ªÉn khai Frontend..."

            PROJECT_DIR="$HOME/pixcam-client"
            mkdir -p "$PROJECT_DIR"
            cd "$PROJECT_DIR"

            echo "üì• Docker login..."
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            echo "üì¶ Pull image m·ªõi nh·∫•t..."
            docker pull caophi562005/pixcam-client:v1

            echo "üßπ D·ªçn image r√°c..."
            docker image prune -f || true

            echo "üîÑ D·ª´ng & x√≥a container c≈© (n·∫øu c√≥)..."
            docker stop pixcam-client 2>/dev/null || echo "No container to stop"
            docker rm pixcam-client 2>/dev/null || echo "No container to remove"

            # T·∫°o .env (n·∫øu b·∫°n mu·ªën bi·∫øn c·∫•u h√¨nh, kh√¥ng b·∫Øt bu·ªôc cho FE static)
            echo "‚öôÔ∏è T·∫°o t·ªáp .env..."
            cat <<'EOF' > .env
            ${{ secrets.ENV_CLIENT }}
            EOF
            echo "‚úÖ ƒê√£ t·∫°o t·ªáp .env."

            # T·∫°o docker-compose.yml
            echo "‚öôÔ∏è T·∫°o t·ªáp docker-compose.yml..."
            cat <<'EOF' > docker-compose.yml
            version: '3.8'
            services:
              pixcam-client:
                image: caophi562005/pixcam-client:v1
                container_name: pixcam-pixcam
                restart: unless-stopped
                ports:
                  - "${HOST_PORT:-3100}:80"
            EOF
            echo "‚úÖ ƒê√£ t·∫°o t·ªáp docker-compose.yml."

            echo "üöÄ Kh·ªüi ƒë·ªông container b·∫±ng Docker Compose..."
            docker compose pull
            docker compose up -d --force-recreate

            echo "üéâ Tri·ªÉn khai Frontend ho√†n t·∫•t!"
